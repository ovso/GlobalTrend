apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply from: '../scripts/ktlint.gradle'

def keystorePropertiesFile = rootProject.file("../jks/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion config.compile_sdk
    defaultConfig {
        applicationId config.app_id
        minSdkVersion config.min_sdk
        targetSdkVersion config.target_sdk
        versionCode config.version_major * 1000000 + config.version_minor * 1000 + config.version_patch
        versionName "${config.version_major}.${config.version_minor}.${config.version_patch}"
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "GlobalTrend_${versionCode}_$versionName")
    }
    buildTypes {
        debug {
            minifyEnabled false
            resValue("string", "ads_app_id", "ca-app-pub-3940256099942544~3347511713")
            resValue("string", "ads_banner_unit_id", "ca-app-pub-3940256099942544/6300978111")
            resValue("string", "ads_interstitial_id", "ca-app-pub-3940256099942544/1033173712")
        }
        release {

            minifyEnabled true
            shrinkResources true

            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-rules.pro'
            proguardFile 'proguard-firebase.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            resValue("string", "ads_app_id", "ca-app-pub-8679189423397017~8521853317")
            resValue("string", "ads_banner_unit_id", "ca-app-pub-8679189423397017/1841551438")
            resValue("string", "ads_interstitial_id", "ca-app-pub-8679189423397017/9803145397")
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def formattedDate = new Date().format('yyyyMMddHHmmss')
                    def appName = variant.getApplicationId().split(/[.]/)[3]
                    outputFileName =
                            "${appName}-${variant.name}-${variant.versionCode}-${variant.versionName}-${formattedDate}.apk"
                }
            }
        }

    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin
    implementation deps.androidx.values()

    implementation deps.jetbrains.kotlin_reflect

    implementation deps.firebase.ads

    implementation deps.rx.values()

    implementation deps.coroutines.values()

    implementation "com.google.dagger:dagger:2.28.3"
    implementation "com.google.dagger:hilt-android:2.28.1-alpha"
    implementation "com.google.dagger:hilt-android-testing:2.28.1-alpha"
    implementation "androidx.hilt:hilt-common:1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt "com.google.dagger:dagger-compiler:2.28.1"
    kapt "com.google.dagger:hilt-android-compiler:2.28.1-alpha"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

/*
    daggerVersion           : '2.28',
    daggerHiltAndroidVersion: '2.28-alpha',
    daggerHiltVersion       : '1.0.0-alpha01',

 */
    implementation deps.jsoup
    implementation deps.easydeviceinfo
    implementation deps.licensedialog
    implementation deps.timber
    implementation deps.easyprefs
    implementation deps.rssparser
    implementation deps.lottie

    implementation deps.glide.runtime
    kapt deps.glide.compiler

    implementation deps.retrofit.values()
    implementation deps.okhttp.values()

    testImplementation deps.atsl.junit
    androidTestImplementation deps.atsl.values()
}

kapt {
    correctErrorTypes true
}

apply plugin: 'com.google.gms.google-services'
